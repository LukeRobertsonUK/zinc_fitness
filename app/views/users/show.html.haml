
%h2
  -if @user == current_user
    My Workouts:
  -else
    = "#{@user.full_name.possessive} Workouts:"


.row
  .col-md-5
    %h3
      = "Outstanding (#{@outstanding_count})"
    -if @outstanding_workouts.blank?
      %p You have no outstanding workouts. Ask your trainer to create a program of workouts for you!
    -else
      %ul.workout_list
        -@outstanding_workouts.each do |workout|
          %li{ class: (workout.due_date < Date.today ? "overdue" : "due")}
            %p.admin_workout_description
              =workout.description
            %p
              = list_exercises(workout)
            %p.completion
              - if workout.due_date < Date.today
                = "Overdue: #{workout.due_date.to_formatted_s(:long_ordinal)}"
              -else
                = "Due: #{workout.due_date.to_formatted_s(:long_ordinal)}"
            = link_to "View", workout_path(workout), class: "btn btn-primary btn-xs "
      = paginate @outstanding_workouts, param_name: 'page_2'
      %br

  .col-md-5
    %h3
      ="Completed (#{@completed_count})"
    -if @completed_workouts.blank?
      %p You have yet to complete a workout. To do so, click "View" next to one of your outstanding workouts and then click ''Mark Complete".
    -else
      %ul.workout_list
        -@completed_workouts.each do |workout|
          %li.completed
            %p.admin_workout_description
              = workout.description
            %p
              = list_exercises(workout)
            %p.completion
              = "Completed: #{workout.completion_date.to_formatted_s(:long_ordinal)}"
            = link_to "View", workout_path(workout),  class: "btn btn-primary btn-xs "
      = paginate @completed_workouts
  .col-md-2.maximums_column

    %h3
      PBs
    -if @grouped_exercises.blank?
      %p You have yet to record a weight for any of your workouts. To do so, click "View" next to one of your outstanding workouts and then "+ Weights" to record weights for each applicable activity.
    -else
      %ul.maximums
        - @pb_array.each do |pair|
          %li.maximum
            ="#{pair[0]}: #{pair[1]}kg"
.row
  .spacer